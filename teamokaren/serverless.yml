org: kajho
app: teamokaren1
service: teamokaren

plugins:
  - serverless-offline

custom:
  personajesTable: ${env:PERSONAJES_TABLE}
  swapiUrl: ${env:SWAPI_URL}
  mongoUri: ${env:MONGODB_URI}
  # accountId: 148761658682

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.personajesTable}
            # - arn:aws:dynamodb:${self:provider.region}:${self:custom.accountId}:table/${self:custom.personajesTable}

  environment:
    PERSONAJES_TABLE: ${self:custom.personajesTable}
    SWAPI_URL: ${self:custom.swapiUrl}
    MONGODB_URI: ${self:custom.mongoUri}

functions:
  postPersonaje:
    handler: src/infrastructure/http/handlers/createPersonajeHandler.handler
    events:
      - httpApi:
          path: /personajes
          method: POST
  
  postPersonajeMongo:
    handler: src/infrastructure/http/handlers/createPersonajeMongoHandler.handler
    events:
      - httpApi:
          path: /mongo/personajes
          method: POST

  getPersonaje:
    handler: src/infrastructure/http/handlers/getPersonajeHandler.handler
    events:
      - httpApi:
          path: /personajes/{id}/find
          method: GET
